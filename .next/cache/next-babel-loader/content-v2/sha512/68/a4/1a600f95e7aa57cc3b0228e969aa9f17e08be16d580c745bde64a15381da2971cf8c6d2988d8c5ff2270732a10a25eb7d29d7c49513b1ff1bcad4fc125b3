{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/harimahat/Desktop/Devlop/pluralsight/designingReactComponents/src/components/Speaker/withData.js\",\n    _this = this;\n\n// Creating a high orderr component (high order function) that takes a component and returns a component with data\n\n/* function withData(maxSpeakerToShow) {\n  return function (Component) {\n    const speakers = [\n      {\n        imageSrc: 'speaker-component-1124',\n        name: 'Mr A',\n      },\n      {\n        imageSrc: 'speaker-component-1530',\n        name: 'Mr B',\n      },\n      {\n        imageSrc: 'speaker-component-10803',\n        name: 'Mr C',\n      },\n    ];\n    return function () {\n      const limistSpeakers = speakers.slice(0, maxSpeakerToShow);\n      return <Component speakers={limistSpeakers}></Component>;\n    };\n  };\n} */\n// Shortned Version of above code, Lambda variation with arrow functions\nvar withData = function withData(maxSpeakerToShow) {\n  return function (Component) {\n    var speakers = [{\n      imageSrc: 'speaker-component-1124',\n      name: 'Mr A'\n    }, {\n      imageSrc: 'speaker-component-1530',\n      name: 'Mr B'\n    }, {\n      imageSrc: 'speaker-component-10803',\n      name: 'Mr C'\n    }];\n    return function () {\n      var limistSpeakers = speakers.slice(0, maxSpeakerToShow);\n      return /*#__PURE__*/_jsxDEV(Component, {\n        speakers: limistSpeakers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 12\n      }, _this);\n    };\n  };\n};\n\nexport default withData;","map":{"version":3,"sources":["/Users/harimahat/Desktop/Devlop/pluralsight/designingReactComponents/src/components/Speaker/withData.js"],"names":["withData","maxSpeakerToShow","Component","speakers","imageSrc","name","limistSpeakers","slice"],"mappings":";;;;;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAACC,gBAAD;AAAA,SAAsB,UAACC,SAAD,EAAe;AACpD,QAAMC,QAAQ,GAAG,CACf;AACEC,MAAAA,QAAQ,EAAE,wBADZ;AAEEC,MAAAA,IAAI,EAAE;AAFR,KADe,EAKf;AACED,MAAAA,QAAQ,EAAE,wBADZ;AAEEC,MAAAA,IAAI,EAAE;AAFR,KALe,EASf;AACED,MAAAA,QAAQ,EAAE,yBADZ;AAEEC,MAAAA,IAAI,EAAE;AAFR,KATe,CAAjB;AAcA,WAAO,YAAM;AACX,UAAMC,cAAc,GAAGH,QAAQ,CAACI,KAAT,CAAe,CAAf,EAAkBN,gBAAlB,CAAvB;AACA,0BAAO,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAEK;AAArB;AAAA;AAAA;AAAA;AAAA,eAAP;AACD,KAHD;AAID,GAnBgB;AAAA,CAAjB;;AAoBA,eAAeN,QAAf","sourcesContent":["// Creating a high orderr component (high order function) that takes a component and returns a component with data\n/* function withData(maxSpeakerToShow) {\n  return function (Component) {\n    const speakers = [\n      {\n        imageSrc: 'speaker-component-1124',\n        name: 'Mr A',\n      },\n      {\n        imageSrc: 'speaker-component-1530',\n        name: 'Mr B',\n      },\n      {\n        imageSrc: 'speaker-component-10803',\n        name: 'Mr C',\n      },\n    ];\n    return function () {\n      const limistSpeakers = speakers.slice(0, maxSpeakerToShow);\n      return <Component speakers={limistSpeakers}></Component>;\n    };\n  };\n} */\n\n// Shortned Version of above code, Lambda variation with arrow functions\n\nconst withData = (maxSpeakerToShow) => (Component) => {\n  const speakers = [\n    {\n      imageSrc: 'speaker-component-1124',\n      name: 'Mr A',\n    },\n    {\n      imageSrc: 'speaker-component-1530',\n      name: 'Mr B',\n    },\n    {\n      imageSrc: 'speaker-component-10803',\n      name: 'Mr C',\n    },\n  ];\n  return () => {\n    const limistSpeakers = speakers.slice(0, maxSpeakerToShow);\n    return <Component speakers={limistSpeakers}></Component>;\n  };\n};\nexport default withData;\n"]},"metadata":{},"sourceType":"module"}