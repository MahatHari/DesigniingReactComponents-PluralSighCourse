{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/harimahat/Desktop/Devlop/pluralsight/designingReactComponents/src/components/Speaker/withData.js\";\n\n// Creating a high orderr component (high order function) that takes a component and returns a component with data\n\n/* function withData(maxSpeakerToShow) {\n  return function (Component) {\n    const speakers = [\n      {\n        imageSrc: 'speaker-component-1124',\n        name: 'Mr A',\n      },\n      {\n        imageSrc: 'speaker-component-1530',\n        name: 'Mr B',\n      },\n      {\n        imageSrc: 'speaker-component-10803',\n        name: 'Mr C',\n      },\n    ];\n    return function () {\n      const limistSpeakers = speakers.slice(0, maxSpeakerToShow);\n      return <Component speakers={limistSpeakers}></Component>;\n    };\n  };\n} */\n// Shortned Version of above code, Lambda variation with arrow functions\nconst withData = maxSpeakerToShow => Component => {\n  const speakers = [{\n    imageSrc: 'speaker-component-1124',\n    name: 'Mr A'\n  }, {\n    imageSrc: 'speaker-component-1530',\n    name: 'Mr B'\n  }, {\n    imageSrc: 'speaker-component-10803',\n    name: 'Mr C'\n  }];\n  return () => {\n    const limistSpeakers = speakers.slice(0, maxSpeakerToShow);\n    return /*#__PURE__*/_jsxDEV(Component, {\n      speakers: limistSpeakers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  };\n};\n\nexport default withData;","map":{"version":3,"sources":["/Users/harimahat/Desktop/Devlop/pluralsight/designingReactComponents/src/components/Speaker/withData.js"],"names":["withData","maxSpeakerToShow","Component","speakers","imageSrc","name","limistSpeakers","slice"],"mappings":";;;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,MAAMA,QAAQ,GAAIC,gBAAD,IAAuBC,SAAD,IAAe;AACpD,QAAMC,QAAQ,GAAG,CACf;AACEC,IAAAA,QAAQ,EAAE,wBADZ;AAEEC,IAAAA,IAAI,EAAE;AAFR,GADe,EAKf;AACED,IAAAA,QAAQ,EAAE,wBADZ;AAEEC,IAAAA,IAAI,EAAE;AAFR,GALe,EASf;AACED,IAAAA,QAAQ,EAAE,yBADZ;AAEEC,IAAAA,IAAI,EAAE;AAFR,GATe,CAAjB;AAcA,SAAO,MAAM;AACX,UAAMC,cAAc,GAAGH,QAAQ,CAACI,KAAT,CAAe,CAAf,EAAkBN,gBAAlB,CAAvB;AACA,wBAAO,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAEK;AAArB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAHD;AAID,CAnBD;;AAoBA,eAAeN,QAAf","sourcesContent":["// Creating a high orderr component (high order function) that takes a component and returns a component with data\n/* function withData(maxSpeakerToShow) {\n  return function (Component) {\n    const speakers = [\n      {\n        imageSrc: 'speaker-component-1124',\n        name: 'Mr A',\n      },\n      {\n        imageSrc: 'speaker-component-1530',\n        name: 'Mr B',\n      },\n      {\n        imageSrc: 'speaker-component-10803',\n        name: 'Mr C',\n      },\n    ];\n    return function () {\n      const limistSpeakers = speakers.slice(0, maxSpeakerToShow);\n      return <Component speakers={limistSpeakers}></Component>;\n    };\n  };\n} */\n\n// Shortned Version of above code, Lambda variation with arrow functions\n\nconst withData = (maxSpeakerToShow) => (Component) => {\n  const speakers = [\n    {\n      imageSrc: 'speaker-component-1124',\n      name: 'Mr A',\n    },\n    {\n      imageSrc: 'speaker-component-1530',\n      name: 'Mr B',\n    },\n    {\n      imageSrc: 'speaker-component-10803',\n      name: 'Mr C',\n    },\n  ];\n  return () => {\n    const limistSpeakers = speakers.slice(0, maxSpeakerToShow);\n    return <Component speakers={limistSpeakers}></Component>;\n  };\n};\nexport default withData;\n"]},"metadata":{},"sourceType":"module"}